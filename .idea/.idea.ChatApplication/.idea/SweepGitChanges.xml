<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="SweepGitChangeService">
    <option name="recentCommitSummaries">
      <list>
        <option value="Refactored user registration flow to use SWR mutation and manual cache update. In Register.tsx, replaced direct axios call with useSWRMutation for registering a user and used useSWRConfig to manually update the login cache after registration. Removed redundant SWR login fetch logic. SignIn.tsx was minimally cleaned up by removing unused state and user context references, but was not central to the main task." />
        <option value="Refactored user registration flow to use SWR mutation and manual cache update. In Register.tsx, replaced direct axios call with useSWRMutation for registering a user and used useSWRConfig to manually update the login cache after registration. Removed redundant SWR login fetch logic. SignIn.tsx was minimally cleaned up by removing unused state and user context references, but was not central to the main task." />
        <option value="Refactored user registration flow to use SWR mutation and manual cache update. In `Register.tsx`, replaced direct axios call with `useSWRMutation` for registering a user and used `mutate` from `useSWRConfig` to manually update the login cache after registration. Removed redundant SWR login fetch logic. Minor cleanup in `SignIn.tsx` by removing unused state and user context references." />
        <option value="Refactored user registration flow to use SWR mutation and manual cache update. In Register.tsx, replaced direct axios call with useSWRMutation for registering a user and used useSWRConfig to manually update the login cache after registration. Removed redundant SWR login fetch logic. SignIn.tsx was minimally cleaned up by removing unused state and user context references, but was not central to the main task." />
        <option value="Refactored user registration flow to use SWR mutation and manual cache update. In Register.tsx, replaced direct axios call with useSWRMutation for registering a user and used useSWRConfig to manually update the login cache after registration. Removed redundant SWR login fetch logic. SignIn.tsx was minimally cleaned up by removing unused state and user context references, but was not central to the main task." />
        <option value="Refactored data fetching logic across the application to use SWR with improved caching and error handling. Updated multiple components (ChatRooms.tsx, Messages.tsx, MessageInput.tsx, SignIn.tsx, Register.tsx) to use SWR with consistent keys (`/user/login`) and disabled unnecessary revalidations. Replaced native fetch calls with `axiosPrivate` in page.tsx for consistency. Adjusted user state initialization in SignIn and Register components. Updated GhostTextManager_v2.xml to include new error metadata. Minor updates to GetMessagesByUser.cs to fix null check, and updated project metadata files (ChatApplication.AssemblyInfo.cs, ChatApplication.AssemblyInfoInputs.cache, dataSources.xml, rider.project.model.nuget.info) to reflect build and environment changes." />
        <option value="Configured and initialized NuGet package dependencies for the ChatApplication project. This involved generating and adding several build and cache files to support package restore and project compilation. Key files added include `project.assets.json` (defines resolved NuGet dependencies), `ChatApplication.assets.cache` (caches asset information), `ChatApplication.csproj.nuget.g.props` and `ChatApplication.csproj.nuget.g.targets` (import NuGet build logic), and `ChatApplication.csproj.AssemblyReference.cache` (tracks assembly references). These files are essential for managing and restoring NuGet packages, enabling proper build and runtime behavior. Additionally, `.NETCoreApp,Version=v9.0.AssemblyAttributes.cs` and `ChatApplication.GlobalUsings.g.cs` were generated to support .NET 9.0 framework targeting and global using directives." />
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared package sources." />
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed the reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared packages." />
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared package sources." />
      </list>
    </option>
  </component>
</project>