<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="SweepGitChangeService">
    <option name="recentCommitSummaries">
      <list>
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared package sources." />
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed the reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared packages." />
        <option value="Resolved merge conflict by updating NuGet package folder configuration in ChatApplication.csproj.nuget.g.props. Removed reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution across environments and avoids potential conflicts with shared package sources." />
        <option value="Resolved merge conflicts from integrating 'origin/main' into the 'PC' branch by updating NuGet package folder references in ChatApplication.csproj.nuget.g.props. Specifically, the file was modified to remove the reference to the global Visual Studio NuGet package folder, retaining only the user-specific package path. This change ensures consistent package resolution and avoids potential conflicts during build or restore operations." />
        <option value="Implemented and fixed the &quot;Get users not in a chat room&quot; feature. The main task was to ensure that users not currently in a specific chat room could be retrieved correctly. The GetNonChatRoomUsers.cs endpoint was updated to fix the route parameter and improve filtering logic. Supporting changes included updates to repository methods and DTO mappings to ensure correct data retrieval and transformation. Additionally, the project structure was refactored to use the WebApplication1 namespace instead of ChatApplication, affecting many files including DTOs, Mappers, Repositories, and Endpoints. Several new NuGet packages were added (e.g., SocketIOClient, NetCoreServer) and project.assets.json was updated accordingly. The project file (ChatApplication.csproj) and related NuGet cache and config files were also updated to reflect these changes." />
        <option value="Implemented and fixed the &quot;Get users not in a chat room&quot; feature. The main task was to ensure that the endpoint correctly returns users who are not part of a specific chat room. The following key files were involved:&#10;&#10;- GetNonChatRoomUsers.cs: Core logic was updated to correctly filter users not in the specified chat room.&#10;- project.assets.json, ChatApplication.assets.cache, project.packagespec.json, ChatApplication.csproj.nuget.dgspec.json, ChatApplication.csproj.nuget.g.props, ChatApplication.csproj.nuget.g.targets: Updated due to the addition of new NuGet packages (e.g., SocketIOClient, NetCoreServer) and changes in project dependencies.&#10;- ChatApplication.csproj: Added new package references to support socket communication and EF Core tooling.&#10;- UserRegisterEndPoint.cs, GetUserEndPoint.cs, GetUsersEndPoint.cs, UserLoginEndPoint.cs: Refactored namespaces and return types for consistency and better error handling.&#10;- Program.cs: Updated to reflect new service registrations and corrected CORS origins.&#10;- Mapping.cs, IMapping.cs, and various Mapper and Repository files: Refactored namespaces from ChatApplication to WebApplication1 for consistency.&#10;- ChatApplication.http: Updated test requests to reflect new user IDs and endpoints.&#10;- Several DTO and Model files (e.g., UserRequest.cs, UserResponse.cs, ChatRoom.cs): Refactored namespaces and ensured compatibility with updated logic.&#10;&#10;These changes collectively ensure that the application can correctly identify and return users not currently in a given chat room, while also preparing the backend for future socket-based communication features." />
        <option value="Updated IDE-generated configuration in v1.xml to reflect a new timestamp value for the generated files cache key, likely triggered by local changes or rebuilds in JetBrains Rider. The v1.xml file stores environment and user-specific settings, and the change indicates an internal update to track the latest cache state." />
        <option value="Enabled preview feature in &quot;Search Everywhere&quot; by updating UI settings. Modified `ui.lnf.xml` to add the `SHOW_PREVIEW_IN_SEARCH_EVERYWHERE` option with a value of `true`, allowing the IDE to display previews in search results. This change customizes the user interface behavior in JetBrains Rider." />
        <option value="Removed unused or disabled plugin configurations from plugins.json as part of copying and cleaning up current JetBrains Rider 2025.1.2 settings. The file plugins.json was modified to eliminate entries for &quot;com.github.copilot&quot;, &quot;ee.carlrobert.chatgpt&quot;, and &quot;quokka.js&quot;, likely to streamline the configuration by excluding inactive or unnecessary plugins." />
        <option value="Implemented and fixed the &quot;Get users not in a chat room&quot; feature. The main task was to ensure that users not currently in a specific chat room could be retrieved correctly. The GetNonChatRoomUsers.cs file was central to this task, where the endpoint logic was updated to correctly filter users based on chat room membership. Supporting changes included updates to repository interfaces and implementations (e.g., UserChatRoomRepository.cs, IRepository.cs) to support the necessary queries. Additionally, DTOs and mappers (e.g., UserResponse.cs, UserMapper.cs) were adjusted to ensure proper data transformation. The project.assets.json and related NuGet cache files were updated due to added dependencies and project restructuring. Namespace changes across multiple files (e.g., UserRegisterEndPoint.cs, GetUserEndPoint.cs) reflect a broader refactor to align with the new project structure under WebApplication1.*" />
      </list>
    </option>
  </component>
</project>